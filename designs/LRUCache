package lld.designs;

import java.util.ArrayDeque;
import java.util.Deque;
import java.util.HashMap;
import java.util.Map;

public class LRUCache {
    private Map<Integer, Integer> lru;
    private Deque<Integer> dq;
    private int capacity;

    public LRUCache(int capacity) {
        this.capacity = capacity;
        this.dq = new ArrayDeque<>();
        this.lru = new HashMap<>();
    }

    public int get(int key) {
        if(lru.containsKey(key)) {
            dq.remove(key);
            dq.addFirst(key);
            return lru.get(key);
        }
        return -1;
    }

    public void put(int key, int value) {
        if(lru.containsKey(key)) {
            dq.remove(key);
        }
        dq.addFirst(key);
        lru.put(key, value);
        if(lru.size() > capacity) {
            lru.remove(dq.getLast());
            dq.removeLast();
        }
    }
}

